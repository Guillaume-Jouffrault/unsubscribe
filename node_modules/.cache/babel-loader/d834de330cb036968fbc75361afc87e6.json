{"ast":null,"code":"var _jsxFileName = \"/home/administrateur/Cours/reseau/unsubscribe/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { fbdatabase } from '../firebase/firebase';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const history = useHistory();\n\n  const validateForm = () => {\n    return email.length > 0 && pwd.length > 0;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const id = fbdatabase.collection(\"user\").doc().getId();\n    fbdatabase.collection(\"user\").doc(id).set({\n      email: email,\n      pwd: pwd\n    }).then(() => {\n      console.log(\"Document successfully written!\");\n    }).catch(error => {\n      console.error(\"Error writing document: \", error);\n    });\n    history.push(\"/sucess\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"exemple@gmail.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Mot de passe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: pwd,\n          onChange: e => setPwd(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        type: \"submit\",\n        disabled: !validateForm(),\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"agTtcaTBG1QQU0pAxQCLnMcVgDE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/administrateur/Cours/reseau/unsubscribe/src/pages/Home.js"],"names":["React","useState","Form","Button","fbdatabase","useHistory","Home","email","setEmail","pwd","setPwd","history","validateForm","length","handleSubmit","event","preventDefault","id","collection","doc","getId","set","then","console","log","catch","error","push","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { fbdatabase } from '../firebase/firebase';\n\nimport { useHistory } from 'react-router-dom';\n\nconst Home = () => {\n\n    const [email,setEmail] = useState(\"\");\n    const [pwd,setPwd] = useState(\"\");\n    const history = useHistory();\n\n    const validateForm = () => {\n        return email.length > 0 && pwd.length > 0;\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        const id = fbdatabase.collection(\"user\").doc().getId();\n\n        fbdatabase.collection(\"user\").doc(id).set({\n            email : email,\n            pwd : pwd,\n        })\n        .then(() => {\n            console.log(\"Document successfully written!\");\n        })\n        .catch((error) => {\n            console.error(\"Error writing document: \", error);\n        });\n\n        history.push(\"/sucess\");\n    }\n\n    return (\n        <div className=\"Login\">\n\n            <Form onSubmit={handleSubmit}>\n                <Form.Group size=\"lg\" controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                    autoFocus\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"exemple@gmail.com\"\n                />\n                </Form.Group>\n                <Form.Group size=\"lg\" controlId=\"password\">\n                <Form.Label>Mot de passe</Form.Label>\n                <Form.Control\n                    type=\"password\"\n                    value={pwd}\n                    onChange={(e) => setPwd(e.target.value)}\n                />\n                </Form.Group>\n                <p></p>\n                <Button size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                Connexion\n                </Button>\n            </Form>\n        </div>\n    );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}